// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


/*! 
 * @file KeyValue.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */
#ifndef _DIAGNOSTIC_MSGS_KEY_VALUE_HPP_
#define _DIAGNOSTIC_MSGS_KEY_VALUE_HPP_


#include "../topic.hpp"


namespace diagnostic_msgs {

class KeyValue : public ros2::Topic<KeyValue>
{
public: 
    char key[255];
    char value[255];

  KeyValue():
    Topic("diagnostic_msgs::msg::dds_::KeyValue_", "KeyValue", DIAGNOSTIC_MSGS_KEY_VALUE_ID)
  { 
    memset(key, 0, sizeof(key));
    memset(value, 0, sizeof(value));
  }

  bool serialize(void* msg_buf, const KeyValue* topic)
  {
    ucdrBuffer* writer = (ucdrBuffer*)msg_buf;
    (void) ucdr_serialize_string(writer, topic->key);
    (void) ucdr_serialize_string(writer, topic->value);
   
    return !writer->error;
  }

  bool deserialize(void* msg_buf, KeyValue* topic)
  {
    ucdrBuffer* reader = (ucdrBuffer*)msg_buf;
    (void) ucdr_deserialize_string(reader, topic->key, sizeof(topic->key));
    (void) ucdr_deserialize_string(reader, topic->value, sizeof(topic->value));
    
    return !reader->error;
  }

  uint32_t size_of_topic(const KeyValue* topic, uint32_t size)
  {
    uint32_t previousSize = size;
    size += ucdr_alignment(size, 4) + 4 + (uint32_t)(strlen(topic->key) + 1);
    size += ucdr_alignment(size, 4) + 4 + (uint32_t)(strlen(topic->value) + 1);

    return size - previousSize;
  }

};

} // namespace diagnostic_msgs


#endif // _DIAGNOSTIC_MSGS_KEY_VALUE_HPP_
