// This file was generated by the tool gen.

#ifndef _STD_MSGS_INT8_H_
#define _STD_MSGS_INT8_H_

#include "../topic.hpp"

// Manualy include list

namespace std_msgs
{

class Int8: public ros2::Topic<Int8>
{
public:
    using SharedPtr = std::shared_ptr<Int8>;

    int8_t data;

    Int8()
        : Topic("std_msgs::msg::dds_::Int8_", "Int8", STD_MSGS_INT8_ID),
        data(0)
    {
    }

    bool serialize(void* msg_buf, Int8* topic)
    {
        ucdrBuffer* writer = (ucdrBuffer*)msg_buf;
        (void) ucdr_serialize_int8_t(writer, topic->data);

        return !writer->error;
    }

    bool deserialize(void* msg_buf, Int8* topic)
    {
        ucdrBuffer* reader = (ucdrBuffer*)msg_buf;
        (void) ucdr_deserialize_int8_t(reader, &topic->data);

        return !reader->error;
    }

    uint32_t size_of_topic(const Int8* topic, uint32_t size)
    {
        (void) (topic);

        uint32_t previousSize = size;
        size += ucdr_alignment(size, 1) + 1;

        return size - previousSize;
    }

};

} // namespace std_msgs

#endif // _STD_MSGS_INT8_H_