// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*! 
 * @file String.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _STD_MSGS_STRING_HPP_
#define _STD_MSGS_STRING_HPP_

#include "../topic.hpp"


namespace std_msgs {

class String : public ros2::Topic<String>
{
public:
  char data[64];

  String():
    Topic("std_msgs::msg::dds_::String_", "String", STD_MSGS_STRING_ID)
  {
    memset(data, 0, sizeof(data));
  }


  bool serialize(void* msg_buf, const String* topic)
  {
    ucdrBuffer* writer = (ucdrBuffer*)msg_buf;
    (void) ucdr_serialize_string(writer, topic->data);
    return !writer->error;
  }

  bool deserialize(void* msg_buf, String* topic)
  {
    ucdrBuffer* reader = (ucdrBuffer*)msg_buf;
    (void) ucdr_deserialize_string(reader, topic->data, sizeof(topic->data));
    return !reader->error;
  }

  uint32_t size_of_topic(const String* topic, uint32_t size)
  {
    uint32_t previousSize = size;
    size += ucdr_alignment(size, 4) + 4 + (uint32_t)(strlen(topic->data) + 1);

    return size - previousSize;
  }


};

} // namespace std_msgs


#endif // _STD_MSGS_STRING_HPP_
